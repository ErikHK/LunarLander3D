attribute vec3 inPosition;
attribute vec3 inNormal;
attribute vec2 inTexCoord;

varying vec3 exNormal;
varying mat4 cammat;
varying vec4 col;
varying vec2 texCoord;

varying vec3 inPos;
varying float tf;

uniform mat4 matrix;
uniform mat4 projmatrix;
uniform mat4 cammatrix;
uniform float ang;
uniform float fuel;
uniform int draw_hud;
uniform int drawterrain2;
uniform float t;
mat4 test;


mat3 normalMatrix = mat3(cammatrix * matrix);
vec3 transformedNormal = normalMatrix * inNormal;

void main(){

  const vec3 light = vec3(0.58, 0.58, 0.58);
  float shade;
  shade = dot(normalize(inNormal), light);
  col = vec4(shade);
  vec3 pos = vec3(inPosition);

  exNormal = transformedNormal;

  if(pos.y < -0.4 && drawterrain2==1)
  {
    gl_Position = projmatrix*cammatrix*matrix*vec4(pos.x, .2*sin(pos.x/2. + 2.0*t), pos.z, 1.0);
    //gl_Normal.y = 1.0;
    //inNormal.y = 1.0;
  }
  else if(draw_hud==1)
  {
    gl_Position = projmatrix*vec4(pos.x*6.0*fuel/100.0+13.0, pos.y*2.0+8.0, pos.z-20.0, 1.0);

  }
  else
    gl_Position = projmatrix*cammatrix*matrix*vec4(pos, 1.0);

  cammat = cammatrix;

  inPos = inPosition;

  texCoord = inTexCoord;
  tf = t;

}